<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.javaclassS11.dao.AdminDAO">
<!-- select -->	
	<!-- 잠시 leftSide에 필요한 정보 처리하기 위해 adminService를 빌림 -->
	<select id="getMasterNickName" resultType="String">
		select nickName from memberSS where memLevel = 114;
	</select>
	
	<select id="getCafeMemberCount" resultType="int">
		select count(*) from memberSS;
	</select>	
	
	<select id="getCafeVisitCount"  resultType="int">
		select sum(visitCnt) from memberSS;
	</select>
	
	<select id="getMemberInfoByIdx" resultType="com.spring.javaclassS11.vo.MemberVO">
		select * from memberSS where idx = #{idx};
	</select>
	
	<select id="getLobbyPost" resultType="com.spring.javaclassS11.vo.LobbyPostVO">
		select * from lobbyPost order by idx desc;
	</select>

	<select id="getAdminList" resultType="com.spring.javaclassS11.vo.MemberVO">
		select * from memberSS where part != 'emp' order by idx, memLevel, part;
	</select>
	
	<select id="getAdminMemberList" resultType="com.spring.javaclassS11.vo.MemberVO">
		select *, timestampdiff(day, blockStartDate, blockEndDate) as blockDate_diff from memberSS where part = 'emp' order by idx;
	</select>
	
	<select id="getAdminMemberLevelList" resultType="com.spring.javaclassS11.vo.MemberVO">
		<if test="level != 5">select *, timestampdiff(day, blockStartDate, blockEndDate) as blockDate_diff from memberSS where memLevel = #{level} order by idx desc;</if>
		<if test="level == 5">select *, timestampdiff(day, blockStartDate, blockEndDate) as blockDate_diff from memberSS where memLevel = #{level} order by idx;</if>		
	</select>
	
	<select id="getAdminMemberInfo" resultType="com.spring.javaclassS11.vo.MemberVO">
		select *, timestampdiff(day, blockStartDate, blockEndDate) as blockDate_diff from memberSS where idx = #{idx};
	</select>

	<select id="getAdminMemberSearchList" resultType="com.spring.javaclassS11.vo.MemberVO">
		<if test="flag == 'midPart'">
			select *, timestampdiff(day, blockStartDate, blockEndDate) as blockDate_diff from memberSS where mid like concat('%',#{memberSearch},'%') order by idx desc;
		</if>
		<if test="flag != 'midPart'">
			select *, timestampdiff(day, blockStartDate, blockEndDate) as blockDate_diff from memberSS where nickName like concat('%',#{memberSearch},'%') order by idx desc;
		</if>
	</select>
	
	<select id="getAdminMemberSearch" resultType="com.spring.javaclassS11.vo.MemberVO">
		<if test="flag == 'midAll'">
			SELECT *, timestampdiff(day, blockStartDate, blockEndDate) as blockDate_diff FROM memberSS WHERE mid = #{memberSearch};
		</if>
		<if test="flag != 'midAll'">
			select *, timestampdiff(day, blockStartDate, blockEndDate) as blockDate_diff from memberSS where nickName = #{memberSearch}; 
		</if>
	</select>
	
	<select id="getBlockReasonDataList" resultType="com.spring.javaclassS11.vo.BlockReasonDataVO">
		select * from blockReasonData order by idx desc;
	</select>
	
	<select id="getAdministerInfo" resultType="com.spring.javaclassS11.vo.MemberVO">
		select * from memberSS where idx = #{idx} and part != 'emp';
	</select>
	
	<select id="getAdministerExistCheck" resultType="com.spring.javaclassS11.vo.MemberVO">
		select * from memberSS where memLevel = #{memLevel} and part = #{part};
	</select>
	
	<select id="getSongList" resultType="com.spring.javaclassS11.vo.RandomSongRecommandVO">
		select * from randomSongRecommand order by idx desc;
	</select>
	
	<select id="getRecommandSongList" resultType="com.spring.javaclassS11.vo.RandomSongRecommandVO">
		select * from randomSongRecommand where idx = #{idx};
	</select>

<!-- insert -->	
	<insert id="setRandomSongRecommandInput">
		insert into randomSongRecommand values (default,#{vo.songName},#{vo.singer},#{vo.genre},#{vo.recAlbumImg},#{vo.recVibe});
	</insert>
	
	<insert id="setBlockReasonData">
		insert into blockReasonData values (default,#{vo.mid},#{vo.nickName},#{vo.blockReason},#{vo.blockStartDate},#{vo.blockEndDate},#{vo.blockGiver});
	</insert>
	
	<insert id="setLobbyPostInsert">
		insert into lobbyPost values (default,#{nickName},#{post});
	</insert>

<!-- update -->	
	<update id="setAdminMemberLevelChange">
		update memberSS set memLevel = #{level} where idx = #{idx};
	</update>
	
	<update id="adminMemberMidNickNameChange">
		update memberSS set mid = #{mid}, nickName = #{nickName} where idx = #{idx};	
	</update>
	
	<update id="setAdminMemberBlockManagement">
		<if test="str == 'cru'"> <!-- 제재기간 부여,수정 -->
			update memberSS set blockStartDate = #{vo.blockStartDate}, blockEndDate = #{vo.blockEndDate}, memLevel = 99 , blockCnt = blockCnt + 1 where idx = #{vo.idx};	
		</if>
		<if test="str != 'cru'"> <!-- 제재기간 삭제 -->
			update memberSS set blockStartDate = default, blockEndDate = default, memLevel = 3 where idx = #{vo.idx};
		</if>
	</update>
	
	<update id="setAdministerAuthorityChenge">
		update memberSS set memLevel = #{memLevel}, part = #{part} where idx = #{idx};
	</update>
	
	<update id="setMemberGiveAdmin">
		update memberSS set memLevel = #{memLevel}, part = #{part} where idx = #{idx};
	</update>
	
	<update id="setAuthorityDelete">
		update memberSS set mid = 'imsiMid#{idx}', nickName = 'imsiNick#{idx}' memLevel = 3, part = 'emp' where idx = #{idx};		
	</update>
	
	<update id="setRecommandSongUpdate">
		update randomSongRecommand set songName = #{vo.songName}, songName = #{vo.songName}, genre = #{vo.genre}, recAlbumImg = #{vo.recAlbumImg}, recVibe = #{vo.recVibe} where idx = #{vo.idx};		
	</update>

<!-- delete -->	
	<delete id="setRandomSongRecommandDelete">
		delete from randomSongRecommand where idx = #{idx};
	</delete>




</mapper>